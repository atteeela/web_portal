<h3>Secure Tokens are a mechanism where you can secure your content with a token.  The token gets validated on the ScaleSimple edge network so there is no concern about incurring additional origin load to ensure the request is valid.  Tokens work as follows:</h3>

<ul>
<li>First, a user visits your website in order for a token to be generated.  This can be any page on your site, usually a login form is where this type of logic happens, but it can be anywhere.  On your origin server you will compute a few things:</li>
	<ul>
	<li>The location of the required security values.  To validate a token, we require at minimum an expiration and the token.  You can choose to require these values either in the cookie, the header or the url itself.  The header is useful for API based requests, while the cookie is better suited for browser based requests.  We support URL for use cases like emailing secure links to downloads, but in general the URL method is not advised.</li>

	<li>The expiration value of the token.  Typically this is set to expire in a relatively short period of time for security reasons, but it can be any time in the future.  The value of this field is in Unix epoch format and can be set either in a header (X-SS-Expiration) or a cookie (ss_expiration)</li>

	<li>The token itself.  This is the actual token that we will compute and validate on our edge network.  This can be stored in the header (X-SS-Token) or in a cookie (ss_token).  The token is computed using the following algorithm  MD5(key,MD5(key,expiration,url)) where key is a shared secret key only known between us and your origin server.  Your key is automatically generated by us once you create a token.</li>
	</ul>
</ul>

<p/><h5>Some things to be aware of when using tokens: </h5>

<ul>
	<li> The token is removed from either the cookie, the header or the URL request before passing the request to origin and before caching the object.  The reason is both for security (not transmitting tokens) and for ensuring that the same URL with multiple tokens will cache identically</li>
	<li>When we compute the token, we use the URL exactly as it appears in the request.  Please ensure you are aware of any query strings and know the exact URL that will be used when generating a token.</li>
</ul>